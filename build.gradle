group 'com.ackdevelopment'
version '0.0.1'

buildscript {
    ext.kotlin_version = '1.1.51'
    ext.ktor_version = '0.4.0'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //classpath "org.hidetake:gradle-ssh-plugin:2.9.0"
    }
}

repositories {
    mavenCentral()
    jcenter()

    maven { url "http://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
//apply plugin: 'org.hidetake.ssh'

sourceCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.ktor:ktor-core:$ktor_version"
    compile "org.jetbrains.ktor:ktor-locations:$ktor_version"
    compile "org.jetbrains.ktor:ktor-netty:$ktor_version"
    compile "org.jetbrains.ktor:ktor-auth:$ktor_version"
    compile "org.jetbrains.ktor:ktor-html-builder:$ktor_version"
    compile "ch.qos.logback:logback-classic:1.2.1"
    compile "org.litote.kmongo:kmongo:3.5.0"
    compile('se.michaelthelin.spotify:spotify-web-api-java:1.5.0') {
        exclude group: "commons-beanutils", module: "commons-beanutils"
    }
    compile 'commons-beanutils:commons-beanutils:20030211.134440'
    compile 'com.github.kittinunf.fuel:fuel:1.11.0' //for JVM
    compile 'com.github.kittinunf.fuel:fuel-jackson:1.11.0' //for Jackson support
}

mainClassName = "com.ackdevelopment.songport.Main"

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task fatJar(type: Jar) {
    archiveName = "songport.jar"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task copyJar(type: Copy) {
    from fatJar
    into 'install'
}

build.dependsOn fatJar
build.dependsOn copyJar
